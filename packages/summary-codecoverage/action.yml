name: 'Print the job summary with code coverage'
description: 'Print the job summary with code coverage'
inputs:
  gist-token:
    required: true
    description: Personal access token for github gist
  github-organization:
    required: true
    description: Name of the github organization
  badge-gist-id:
    required: true
    description: Id for the badge gist
  debug:
    required: false
    type: boolean
    default: false
    description: Flag to debug this action, default is false

runs:
  using: "composite"
  steps:

    - name: DEBUG
      if: ${{ inputs.debug }}
      shell: bash
      run: |
        echo "*****************************************************"
        echo "* summary-testcases action"
        echo "*****************************************************"
        echo "Input variables: "
        echo "  gist-token: $(echo ${{inputs.gist-token}} | sed 's/./& /g')"  
        echo "  github-organization: ${{ inputs.github-organization }}"
        echo "  badge-gist-id: ${{ inputs.badge-gist-id }}"
        echo ".."

    - name: Get the pom service information
      id: service-info
      uses: jpontdia/mulesoft-pipeline/packages/service-info@main

    - name: Summary - Add code coverage
      shell: bash
      run: |
        temporal=""
        line=0
        trigger=0
        while IFS= read -r p; do
        
          if [[ "$p" == *"<div class=\"col-md-8 col-md-offset-2\">"* ]]; then
            echo "Summary starts at line: $line"
            ((line=line+1))
            trigger=1
            continue
          fi

          if [[ $trigger == 1 ]]; then
            # echo "${p:0:6}"
            echo "$p"
            if [[ "${p:0:6}" == "</div>" ]]; then
              echo "Exit condition at line: $line"
              break
            else
              temporal+=$p
            fi
          fi

          ((line=line+1))
        done < target/site/munit/coverage/summary.html

        # Remove html tag: <a>
        temporal=$(sed -e 's/<\/a[^>]*>//g' <<<"$temporal")
        temporal=$(sed -e 's/<a[^>]*>//g' <<<"$temporal")

        # Add job summary 
        echo "<div>" >> $GITHUB_STEP_SUMMARY
        echo "$temporal" >> $GITHUB_STEP_SUMMARY
        echo "</div>" >> $GITHUB_STEP_SUMMARY

    - name: Set the code coverage results as environment variable
      id: json_var
      shell: bash
      run: |
        content=`cat target/site/munit/coverage/munit-coverage.json`
        # the following lines are only required for multi line json
        content="${content//'%'/'%25'}"
        content="${content//$'\n'/'%0A'}"
        content="${content//$'\r'/'%0D'}"
        # end of optional handling for multi line json
        echo "::set-output name=packageJson::$content"

    - name: Set badge color
      shell: bash
      run: |
        coverage=${{ fromJSON(steps.json_var.outputs.packageJson).coverage }}
        minimum=${{ fromJSON(steps.json_var.outputs.packageJson).requiredApplicationCoverage }}
        echo "Application coverage: $coverage"
        echo "Minimum: $minimum"
        
        if [[ "$((coverage))" -ge "$((minimum))" ]]; then
          echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
        else
          echo "BADGE_COLOR=800000" >> $GITHUB_ENV
        fi

    - name: Create badge
      uses: emibcn/badge-action@d6f51ff11b5c3382b3b88689ae2d6db22d9737d1
      with:
        label: Code coverage
        status: '${{ fromJSON(steps.json_var.outputs.packageJson).coverage }}% of ${{ fromJSON(steps.json_var.outputs.packageJson).requiredApplicationCoverage }}%'
        color: ${{ env.BADGE_COLOR }}
        path: ${{ steps.service-info.outputs.name }}-cc.svg

    - name: Upload badge to Gist
      if: ${{ false }}
      uses: exuanbo/actions-deploy-gist@v1
      with:
        token: ${{ inputs.gist-token }}
        gist_id: ${{ inputs.github-organization }}/${{ inputs.badge-gist-id }}
        #gist_id: ${{ inputs.badge-gist-id }}
        file_path: ${{ steps.service-info.outputs.name }}-cc.svg
        file_type: binary

    - name: Upload badge to Gist
      uses: andymckay/append-gist-action@1fbfbbce708a39bd45846f0955ed5521f2099c6d
      with:
        token: ${{ inputs.gist-token }}
        gistURL: "https://gist.githubusercontent.com/${{ inputs.github-organization }}/${{ inputs.badge-gist-id }}"
        file: ${{ steps.service-info.outputs.name }}-cc.svg