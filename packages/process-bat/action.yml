name: "Execute Mulesoft BAT"
description: "Execute Mulesoft BAT"
inputs:
  pushover_token:
    description: "Pushover application token"
    required: true
  pushover_user:
    description: "Pushover user key"
    required: true
  application_name:
    required: true
    default: "cca-demo-sapi"
    description: The name of the application the deployment issue was created for
  version:
    required: true
    default: "1.0.10"
    description: The version of the application to be deployed to the environment
  deployment-env:
    required: true
    description: Deployment environment for the service
outputs:
  outcome:
    description: "The result of the test: success, failure, skipped"
    value: ${{ steps.run-tests.outputs.outcome }}

runs:
  using: "composite"
  steps:
    - name: Execute Mulesoft BAT
      id: bat
      if: ${{ hashFiles('bat') != '' }}
      shell: bash
      run: |
        echo " "
        echo "***************************************"
        echo "Install Anypoint CLI"
        echo "***************************************"
        echo " "
        curl -o- 'https://s3.amazonaws.com/bat-wrapper/install.sh' | bash
        echo " "
        echo "bat -version: $(bat -version)"

        bat_executable=$( echo "$deployment_environment.yaml")
        cd bat
        mkdir target
        echo "outcome=failure" >> $GITHUB_OUTPUT
        bat $bat_executable
        echo "outcome=success" >> $GITHUB_OUTPUT
        echo " "

    - name: Run pushover notify
      id: Pushover
      uses: CoveredCA/common-devops/packages/pushover-notify@main
      with:
        user: "${{ inputs.pushover_user }}"
        token: "${{ inputs.pushover_token }}"
        title: "${{ inputs.application_name }}" # Set the message title or leave empty
        message: "<b>JOB:</b> ü¶á BAT Testing<br><b>APP:</b> ${{ inputs.application_name }}<br><b>VERSION:</b> ${{ inputs.version }}<br><b>ENV:</b> ${{ inputs.deployment-env }}<br><b>OUTCOME:</b> ${{ steps.bat.outputs.outcome == 'success' && '‚úÖ' || '‚ùå'}}"
        html: 1 # Set to 1 to enable HTML parsing or leave empty
        priority: ${{ steps.bat.outputs.outcome == 'success' && '0' || '1' }} # Set the priority value or leave empty
        sound: "${{ steps.bat.outputs.outcome == 'success' && 'bugle' || 'falling'}}" # Specify the sound name or leave empty
        url: "https://www.github.com/CoveredCA/${{ inputs.application_name }}/actions/runs/${{ github.run_id }}" # Add the URL or leave empty
        url_title: "Go To GitHub Actions Log" # Add the URL title or leave empty

    - name: Summary - Test
      uses: CoveredCA/common-devops/packages/summary-junit@main
      if: always()
      with:
        badge-label: ${{ env.deployment_environment }} test
        badge-suffix: ${{ env.deployment_environment }}-test
        path-report: bat/target/JUnit.xml
        path-directoryreports: bat/target/*
