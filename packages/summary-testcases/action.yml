name: 'Summary - Publish test results'
description: 'Summary - Publish test results'
inputs:
  gist-token:
    required: true
    description: Personal access token for github gist
  github-organization:
    required: true
    description: Name of the github organization
  badge-gist-id:
    required: true
    description: Id for the badge gist
  debug:
    required: false
    default: "false"
    description: Flag to debug this action, default is false

runs:
  using: "composite"
  steps:
 
    - name: DEBUG
      if: ${{ inputs.debug == 'true' }}
      shell: bash
      run: |
        echo "*****************************************************"
        echo "* summary-testcases action"
        echo "*****************************************************"
        echo "Input variables: "
        echo "  gist-token: $(echo ${{inputs.gist-token}} | sed 's/./& /g')"  
        echo "  github-organization: ${{ inputs.github-organization }}"
        echo "  badge-gist-id: ${{ inputs.badge-gist-id }}"
        echo "."

    - name: Get the pom service information
      id: service-info
      uses: jpontdia/devops-pipelines/packages/service-info@main

    - name: Summary - Publish test results
      id: unit-test-results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          target/surefire-reports/*.xml
        check_name: Unit Test Results

    - name: Set badge color
      shell: bash
      run: |
        case ${{ fromJSON( steps.unit-test-results.outputs.json ).conclusion }} in
          success)
            echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
            ;;
          failure)
            echo "BADGE_COLOR=800000" >> $GITHUB_ENV
            ;;
          neutral)
            echo "BADGE_COLOR=696969" >> $GITHUB_ENV
            ;;
        esac

    - name: Create badge
      uses: emibcn/badge-action@d6f51ff11b5c3382b3b88689ae2d6db22d9737d1
      with:
        label: Unit test
        status: '${{ fromJSON( steps.unit-test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.unit-test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.unit-test-results.outputs.json ).conclusion }}'
        color: ${{ env.BADGE_COLOR }}
        path: ${{ steps.service-info.outputs.name }}-ut.svg

    - name: Upload badge to Gist
      uses: andymckay/append-gist-action@1fbfbbce708a39bd45846f0955ed5521f2099c6d
      with:
        #token: ${{ inputs.gist-token }}
        token: $github_gist_accesstoken
        gistURL: "https://gist.githubusercontent.com/${{ inputs.github-organization }}/${{ inputs.badge-gist-id }}"
        file: ${{ steps.service-info.outputs.name }}-ut.svg