name: 'Deploys a service to Cloudhub/GovCloud'
description: 'Deploys a service to Cloudhub/GovCloud'
inputs:
  keyvault-key:
    required: true
    description: The name of the KeyVault
  azure-credentials:
    required: true
    description: Azure Credentials for login
  github-organization:
    required: true
    description: Name of the github organization that is used to locate the secrets mapping file
  configurations-repository:
    required: true
    description: Name of the repository for mulesoft configurations
  deployment-env:
    required: true
    description: Deployment environment for the service
  host:
    required: false
    description: The host of your Anypoint Platform Installation. This value defaults to anypoint.mulesoft.com.
    default: anypoint.mulesoft.com
runs:
  using: "composite"
  steps:

  - name: Get JAR file
    uses: actions/download-artifact@v3
    with:
      name: jar

  - name: Get POM file
    uses: actions/download-artifact@v3
    with:
      name: pom
  
  - name: Get global configuration for the pipeline
    uses: jpontdia/common-devops/packages/configuration-service@main
    with:
      keyvault-key: ${{ inputs.keyvault-key }}
      azure-credentials: ${{ inputs.azure-credentials }}
      github-organization: ${{ inputs.github-organization }}
      configurations-repository: ${{ inputs.configurations-repository }}
      environment: ${{ inputs.deployment-env }}

  - id: install-anypoint-cli
    name: Install Mulesoft Anypoint CLI
    uses: jpontdia/common-devops/packages/install-anypoint-cli@main

  - id: deployment
    name: Deploy the service to dev environment
    uses: jpontdia/common-devops/packages/cloudhub-anypoint-cli@main
    with:
      deployment-name: "${{ env.configuration_deployment_name }}"
      connectedapp-clientid: "$cicd_connectedapp_clientid"
      connectedapp-secret: "$cicd_connectedapp_secret" 
      configuration-cloud: "${{ env.configuration_cloudhub }}"
      configuration-service: "${{ env.configuration_properties }}"
      host: ${{ inputs.host }}
      environment: ${{ inputs.deployment-env }}
      organization: "${{ env.configuration_deployment_organization }}"