##########################################################################
# CICD Pipeline
##########################################################################

# Configuration for this template:
# 1.- Replace the predefined repository jpontdia/common-devops with your own.
# 2.- Update the global environment variables for the script 

name: Mulesoft
on:
  workflow_call:
    inputs:
      keyvault-key:
        required: true
        description: Access key to KeyVault
        type: string
    secrets:
      azure-credentials:
        required: true
        description: Azure Credentials for login
env:
  DEFAULT_SETTINGS_XML: settings.xml
  GITHUB_ORGANIZATION: jpontdia
  CONFIGURATIONS_REPOSITORY: common-configurations

jobs:

  tag:
    name: tag
    runs-on: ubuntu-latest
    steps:

      - name: Get the source code
        uses: actions/checkout@v3

      - name: Get global configuration for the pipeline
        uses: jpontdia/common-devops/packages/configuration-service@main
        with:
          keyvault-key: ${{ inputs.keyvault-key }}
          azure-credentials: ${{ secrets.azure-credentials }}
          github-organization: $GITHUB_ORGANIZATION
          configurations-repository: $CONFIGURATIONS_REPOSITORY
          environment: unit-test

      - name: Verify if github tag exists
        shell: bash
        run: |
          echo " "
          echo "***********************************************"
          echo "Verify if github tag exists "
          echo "***********************************************"
          echo " "
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@users.noreply.github.com"

          tag_exist=$(git tag $service_version)
          if [ "$tag_exist" != "" ] ; then
            echo "The tag already exists in Github; update the POM version for the service."
            exit 1
          else
            echo "Create tag $service_version for the respository"
          fi

      - name: Tag repository with service version
        shell: bash
        run: |
          echo " "
          echo "***********************************************"
          echo "Tag repository with service version "
          echo "***********************************************"
          echo " "
          git push origin $service_version
