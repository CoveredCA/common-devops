name: common-parent-pom-version-badge
on:
  workflow_call:

env:
  CONFIGURATIONS_REPOSITORY: common-configurations
  GLOBAL_CONFIGURATION: _global.yml
  SECRETS_AZURE_KEYVAULT: CoveredCA-KV-Mulesoft

jobs:
  version-badge:
    name: Version Badge
    runs-on: ubuntu-latest

    steps:

      - name: Get token from Github App
        id: app-token
        uses: CoveredCA/common-devops/packages/app-token@main
        with:
          client-id: ${{ secrets.MULESOFT_GITHUBAPP_CLIENTID}}
          privatekey: ${{ secrets.MULESOFT_GITHUBAPP_PRIVATEKEY }}

      - name: Get the source code for build environment
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Parse pom.xml
        shell: bash
        run: |
          echo " "
          echo "**************************************"
          echo "Parse pom.xml"
          echo "**************************************"
          echo " "
          echo "  Configuration for environment: $deployment_environment"
          echo " "
          echo "  Install XMLStarlet in Ubuntu"
          sudo apt-get install xmlstarlet --fix-missing        
          echo " "
          echo "  xmlstarlet --version"
          xmlstarlet --version
          echo " "
          echo "  Parse pom.xml"
          servicename=$( xmlstarlet sel -N x=http://maven.apache.org/POM/4.0.0 -t -v "/x:project/x:name" pom.xml )
          serviceversion=$( xmlstarlet sel -N x=http://maven.apache.org/POM/4.0.0 -t -v "/x:project/x:version" pom.xml )
          servicegroup=$( xmlstarlet sel -N x=http://maven.apache.org/POM/4.0.0 -t -v "/x:project/x:groupId" pom.xml )
          serviceartifact=$( xmlstarlet sel -N x=http://maven.apache.org/POM/4.0.0 -t -v "/x:project/x:artifactId" pom.xml )
          echo " "
          echo "  Create environment variables with pom data"
          echo "service_name=$servicename" >> $GITHUB_ENV
          echo "service_version=$serviceversion" >> $GITHUB_ENV
          echo "service_group=$servicegroup" >> $GITHUB_ENV
          echo "service_artifact=$serviceartifact" >> $GITHUB_ENV
          echo " "
          echo "  Variables generated based on pom.xml:"
          echo "    service_name= "$servicename
          echo "    service_version= "$serviceversion          
          echo "    service_group= "$servicegroup
          echo "    service_artifact= "$serviceartifact
          echo " " 

      - name: Create badge
        uses: CoveredCA/common-devops/packages/badge@main
        with:
          label: Release
          status: '${{ env.service_version }}'
          color: 31c653
          file: common-parent-pom-re.svg
          folder: common-parent-pom
