name: Mulesoft
on:
  workflow_call:
    inputs:
      keyvault-key:
        required: true
        description: Access key to KeyVault
        type: string
    secrets:
      azure-credentials:
        required: true
        description: Azure Credentials for login
env:
  DEFAULT_SETTINGS_XML: settings.xml        

jobs:

  ##########################################################################
  # BUILD MULESOFT SERVICE
  ##########################################################################

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so the job can access it
      - name: Get the source code
        uses: actions/checkout@v3

      - name: Cache local Maven repository
        if: ${{ false }}    
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
                
      - name: Setup JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          check-latest: true
          #cache: 'maven'

      - name: Get default secrets for the pipeline
        uses: jpontdia/devops-pipelines/packages/get-secrets@main
        with:
          keyvault-key: jpworks-keyvault
          azure-credentials: ${{ secrets.azure-credentials }}

      - name: Get the settings file for maven
        uses: jpontdia/devops-pipelines/packages/settings-maven@main
        with:
          configuration-access-token: $configuration_access_token
          default-settings-xml: $DEFAULT_SETTINGS_XML 

      - id: configuration-tests
        name: Get configuration file for test cases
        uses: jpontdia/devops-pipelines/packages/configuration-file@main
        with:
          configuration-access-token: $configuration_access_token
          yaml-path: ".test-properties"
          
      - name: Copy Anypoint Exchange documentation
        run: |
          cp -Rfpv README.md exchange-docs/home.md
          cp -Rfpv docs/*.* exchange-docs/docs/*.* 
      
      - name: DEBUG - Show settings file
        run: |
          ls -la $HOME
          cat $HOME/.m2/settings.xml
          echo "Github run number: ${{ github.run_number }}"
