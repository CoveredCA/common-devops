##########################################################################
# CICD Pipeline
##########################################################################

# Configuration for this template:
# 1.- Replace the predefined repository jpontdia/common-devops with your own.
# 2.- Update the global environment variables for the script 

name: Mulesoft
on:
  workflow_call:
    inputs:
      keyvault-key:
        required: true
        description: Access key to KeyVault
        type: string
    secrets:
      azure-credentials:
        required: true
        description: Azure Credentials for login
env:
  DEFAULT_SETTINGS_XML: settings.xml
  GITHUB_ORGANIZATION: jpontdia
  CONFIGURATIONS_REPOSITORY: common-configurations

jobs:

  ##########################################################################
  # TEST BAT
  ##########################################################################

  BAT:
    name: BAT
    runs-on: ubuntu-latest
    environment:
      name: dev
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write    
    steps:

      - name: Get the source code
        uses: actions/checkout@v3

      - name: Get service metadata from pom.xml
        shell: bash
        run: |
          echo " "
          echo "**************************************"
          echo "Getting service info from pom.xml "
          echo "**************************************"

          # Install libxml2 tools for xmllint
          sudo apt-get install -y libxml2-utils

          # Get info from pom.xml
          servicename=$( xmllint --xpath "//*[local-name()='project']/*[local-name()='name']/text()" pom.xml)
          serviceversion=$( xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
          servicegroup=$( xmllint --xpath "//*[local-name()='project']/*[local-name()='groupId']/text()" pom.xml)
          serviceartifact=$( xmllint --xpath "//*[local-name()='project']/*[local-name()='artifactId']/text()" pom.xml)
          
          # Create env variables
          echo "$service_name=$servicename" >> $GITHUB_ENV
          echo "$service_version=$serviceversion" >> $GITHUB_ENV
          echo "$service_group=$servicegroup" >> $GITHUB_ENV
          echo "$service_artifact=$serviceartifact" >> $GITHUB_ENV

          echo " "
          echo "Service info:"
          echo " service_name= " $service_name
          echo " service_version= " $service_version          
          echo " service_group= " $service_group
          echo " service_artifact= " $service_artifact

      - name: Debug service xml
        shell: bash
        run: |
          echo "Show environment variables "
          echo "service_name: " ${{ env.service_name }}
          echo "service_version: " $service_version
          echo "end...."
