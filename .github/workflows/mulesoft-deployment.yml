##########################################################################
# CICD Pipeline
##########################################################################

# Configuration for this template:
# 1.- Replace the predefined repository jpontdia/common-devops with your own.
# 2.- Update the global environment variables for the script 

name: deployment
on:
  workflow_call:
    inputs:
      keyvault-key:
        required: true
        description: Access key to KeyVault
        type: string
    secrets:
      azure-credentials:
        required: true
        description: Azure Credentials for login
env:
  GITHUB_ORGANIZATION: jpontdia
  CONFIGURATIONS_REPOSITORY: common-configurations
  
jobs:

  release:
    name: deployment
    runs-on: ubuntu-latest
    steps:

      - name: Get the release metadata
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}      
        shell: bash
        run: |
          echo " "
          echo "***********************************************"
          echo "Get the release metadata "
          echo "***********************************************"
          echo "Values from github context: "
          echo "  Issue number: ${{ github.event.issue.number}}"
          echo "  Title: ${{ github.event.issue.title}}"
          echo "  Labels: ${{ toJson(github.event.issue.labels) }}"
          echo "  Repository: ${{ github.event.repository}}"
          echo " "
          line=$(echo "${{ github.event.issue.title}}")
          action="$(cut -d' ' -f1 <<<$line)"
          service="$(cut -d' ' -f2 <<< $line)"
          version="$(cut -d' ' -f3 <<< $line)"
          test="$(cut -d' ' -f4 <<< $line)"
          echo "Values from issue title:"
          echo "  Action: $action"
          echo "  Service: $service"
          echo "  Version: $version"
          echo "  Test: $test"
          echo "deployment_version=$version" >> $GITHUB_ENV


      - name: Get the source code
        uses: actions/checkout@v4
        with:
          ref: '${{env.deployment_version}}'

      - name: Debug - Review the source code
        shell: bash
        run: |
          echo " "
          echo "***********************************************"
          echo "Debug - Review the source code "
          echo "***********************************************"
          echo " "
          cat pom.xml

      - uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: ' ${{ github.event.repository}}'
          version: '${{env.deployment_version}}'
          regex: true
          file: "*.jar"
          token: ${{ secrets.GITHUB_TOKEN }}